{"name":"SeaweedFS","tagline":"Store billions of files, and serve them fast","body":"# SeaweedFS\r\n\r\n[![Build Status](https://travis-ci.org/chrislusf/seaweedfs.svg?branch=master)](https://travis-ci.org/chrislusf/seaweedfs)\r\n[![GoDoc](https://godoc.org/github.com/chrislusf/seaweedfs/go?status.svg)](https://godoc.org/github.com/chrislusf/seaweedfs/go)\r\n[![Wiki](https://img.shields.io/badge/docs-wiki-blue.svg)](https://github.com/chrislusf/seaweedfs/wiki)\r\n\r\n![SeaweedFS Logo](https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/note/seaweedfs.png)\r\n\r\n## Introduction\r\n\r\nSeaweedFS is a simple and highly scalable distributed file system. There are two objectives:\r\n\r\n1. to store billions of files!\r\n2. to serve the files fast!\r\n\r\nInstead of supporting full POSIX file system semantics, SeaweedFS choose to implement only a key~file mapping. Similar to the word \"NoSQL\", you can call it as \"NoFS\".\r\n\r\nInstead of managing all file metadata in a central master, SeaweedFS choose to manages file volumes in the central master, and let volume servers manage files and the metadata. This relieves concurrency pressure from the central master and spreads file metadata into volume servers' memories, allowing faster file access with just one disk read operation!\r\n\r\nSeaweedFS models after [Facebook's Haystack design paper](http://www.usenix.org/event/osdi10/tech/full_papers/Beaver.pdf).\r\n\r\nSeaweedFS costs only 40 bytes disk storage for each file's metadata. It is so simple with O(1) disk read that you are welcome to challenge the performance with your actual use cases.\r\n\r\n![](https://api.bintray.com/packages/chrislusf/seaweedfs/seaweedfs/images/download.png)\r\nhttps://bintray.com/chrislusf/seaweedfs/seaweedfs Download latest compiled binaries for different platforms here.\r\n\r\nhttp://groups.google.com/group/weed-file-system SeaweedFS Discussion Group\r\n\r\n## Additional Features\r\n* Can choose no replication or different replication level, rack and data center aware\r\n* Automatic master servers failover. No single point of failure, SPOF.\r\n* Automatic Gzip compression depending on file mime type\r\n* Automatic compaction to reclaimed disk spaces after deletion or update\r\n* Servers in the same cluster can have different disk spaces, different file systems, different OS\r\n* Adding/Removing servers do not cause any data re-balancing\r\n* Optional [filer server][Filer] provides \"normal\" directories and files via http\r\n* For jpeg pictures, optionally fix the orientation.\r\n* Support Etag, Accept-Range, Last-Modified, etc.\r\n* Support in-memory/leveldb/boltdb mode tuning for memory/performance balance.\r\n\r\n[Filer]: https://github.com/chrislusf/seaweedfs/wiki/Filer\r\n\r\n## Installation guide for users who are not familiar with golang\r\n\r\nstep 1: install go on your machine and setup the environment by following the instructions from the following link:\r\n\r\nhttps://golang.org/doc/install\r\n\r\nmake sure you set up your $GOPATH\r\n\r\nstep 2: also you may need to install Mercurial by following the instructions below\r\n\r\nhttp://mercurial.selenic.com/downloads\r\n\r\nstep 3: download, compile, and install the project by executing the following command\r\n\r\ngo get github.com/chrislusf/seaweedfs/go/weed\r\n\r\nonce this is done, you should see the executable \"weed\" under $GOPATH/bin","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}
